/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mmv {
    time-to-max-speed-ms = <300>;
    acceleration-exponent = <2>;
};

/ {
    behaviors {
        // Hold tap

        bsp_ctrl: tap_backspace_hold_ctrl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
			retro-tap; // Triggers tap when releasing hold-tap key and no other key pressed
        };

        com_wind: tap_comma_hold_windows {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        shft_entr: tap_enter_hold_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
		};

        // Tapdance

        td_cb: tap_dance_backspace_ctrl {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LEFT_CONTROL BACKSPACE>, <&kp ESCAPE>;
        };

        td_sec: tap_dance_shift_enter_capslock {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&shft_entr LSHIFT ENTER>, <&kp CAPSLOCK>;
        };

        td_qq: tap_dance_q_esc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp Q>, <&kp ESCAPE>;
        };

        td_quote: tap_dance_colon_quote {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMICOLON>, <&kp SQT>;
        };

        td_f11: tap_dance_f1_f11 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F1>, <&kp F11>;
        };

        td_f12: tap_dance_f2_f12 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp F2>, <&kp F12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_windows {
            bindings = <
&trans  &td_qq  &kp W  &kp E    &kp R          &kp T                    &kp Y    &kp U  &kp I                 &kp O    &td_quote  &trans
&trans  &kp A   &kp S  &kp D    &kp F          &kp G                    &kp H    &kp J  &kp K                 &kp L    &kp P      &trans
&trans  &kp Z   &kp X  &kp C    &kp V          &kp B                    &kp N    &kp M  &com_wind LWIN COMMA  &kp DOT  &kp FSLH   &trans
                       &kp TAB  &kp BACKSPACE  &bsp_ctrl LCTRL SPACE    &td_sec  &to 3  &kp RIGHT_ALT
            >;
        };

        media_mouse {
            bindings = <
&trans  &mkp MB4        &mkp RCLK          &mmv MOVE_UP      &mkp LCLK        &mkp MB5          &kp C_PLAY_PAUSE  &kp C_PREV            &kp C_NEXT            &bt BT_SEL 0  &bt BT_SEL 1  &trans
&trans  &mkp MB3        &mmv MOVE_LEFT     &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &msc SCRL_UP      &kp C_MUTE        &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &bt BT_SEL 2  &bt BT_SEL 3  &trans
&trans  &msc SCRL_LEFT  &kp C_AC_ZOOM_OUT  &kp C_AC_ZOOM_IN  &msc SCRL_RIGHT  &msc SCRL_DOWN    &kp LG(P)         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &bt BT_SEL 4  &bt BT_CLR    &trans
                                           &trans            &to 0            &trans            &trans            &to 0                 &trans
            >;
        };

        numbers_nav {
            bindings = <
&trans  &td_f11       &td_f12        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7    &kp F8    &kp F9        &kp F10    &trans
&trans  &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N7    &kp N8    &kp N9        &kp N0     &trans
&trans  &kp HOME      &kp PAGE_DOWN  &kp PAGE_UP   &kp END       &kp DELETE    &kp INS       &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
                                     &trans        &to 0         &trans        &trans        &to 1     &trans
            >;
        };

        symbols {
            bindings = <
&trans  &kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans  &kp GRAVE  &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &trans
&trans  &trans     &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &trans
                           &trans    &to 0     &trans       &trans     &to 2      &trans
            >;
        };
    };
};
